{"abi":[{"type":"function","name":"get","inputs":[{"name":"namespace","type":"uint256","internalType":"FullyQualifiedNamespace"},{"name":"key","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"set","inputs":[{"name":"namespace","type":"uint256","internalType":"StateNamespace"},{"name":"kvs","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"Set","inputs":[{"name":"namespace","type":"uint256","indexed":false,"internalType":"FullyQualifiedNamespace"},{"name":"key","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"value","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"OddSetLength","inputs":[{"name":"length","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506103b98061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806304b19db41461006e578063295f36d714610083575b600080fd5b610059610054366004610265565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c3660046102ae565b610153565b005b6100ac61009136600461032d565b60009182526020828152604080842092845291905290205490565b604051908152602001610065565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f2deeab6300000000000000000000000000000000000000000000000000000000148061014d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b61015e60028261034f565b1561019c576040517f01c71f3d0000000000000000000000000000000000000000000000000000000081526004810182905260240160405180910390fd5b60008381523360205260408120905b8281101561025e5760008484838181106101c7576101c761038a565b90506020020135905060008585846001018181106101e7576101e761038a565b9050602002013590507f245edc72356e0d4eee6c8edc5e2f5cbe7cc71f347769147ef686bc681845da87848383604051610234939291909283526020830191909152604082015260600190565b60405180910390a160008481526020818152604080832094835293905291909120556002016101ab565b5050505050565b60006020828403121561027757600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146102a757600080fd5b9392505050565b6000806000604084860312156102c357600080fd5b83359250602084013567ffffffffffffffff808211156102e257600080fd5b818601915086601f8301126102f657600080fd5b81358181111561030557600080fd5b8760208260051b850101111561031a57600080fd5b6020830194508093505050509250925092565b6000806040838503121561034057600080fd5b50508035926020909101359150565b600082610385577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd","sourceMap":"951:2009:141:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806304b19db41461006e578063295f36d714610083575b600080fd5b610059610054366004610265565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c3660046102ae565b610153565b005b6100ac61009136600461032d565b60009182526020828152604080842092845291905290205490565b604051908152602001610065565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f2deeab6300000000000000000000000000000000000000000000000000000000148061014d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b61015e60028261034f565b1561019c576040517f01c71f3d0000000000000000000000000000000000000000000000000000000081526004810182905260240160405180910390fd5b60008381523360205260408120905b8281101561025e5760008484838181106101c7576101c761038a565b90506020020135905060008585846001018181106101e7576101e761038a565b9050602002013590507f245edc72356e0d4eee6c8edc5e2f5cbe7cc71f347769147ef686bc681845da87848383604051610234939291909283526020830191909152604082015260600190565b60405180910390a160008481526020818152604080832094835293905291909120556002016101ab565b5050505050565b60006020828403121561027757600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146102a757600080fd5b9392505050565b6000806000604084860312156102c357600080fd5b83359250602084013567ffffffffffffffff808211156102e257600080fd5b818601915086601f8301126102f657600080fd5b81358181111561030557600080fd5b8760208260051b850101111561031a57600080fd5b6020830194508093505050509250925092565b6000806040838503121561034057600080fd5b50508035926020909101359150565b600082610385577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd","sourceMap":"951:2009:141:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1790:207;;;;;;:::i;:::-;;:::i;:::-;;;516:14:485;;509:22;491:41;;479:2;464:18;1790:207:141;;;;;;;;2043:722;;;;;;:::i;:::-;;:::i;:::-;;2811:147;;;;;;:::i;:::-;2903:7;2929:17;;;;;;;;;;;:22;;;;;;;;;;2811:147;;;;1711:25:485;;;1699:2;1684:18;2811:147:141;1565:177:485;1790:207:141;1875:4;1898:52;;;1913:37;1898:52;;:92;;-1:-1:-1;952:25:242;937:40;;;;1954:36:141;1891:99;1790:207;-1:-1:-1;;1790:207:141:o;2043:722::-;2271:14;2284:1;2271:3;:14;:::i;:::-;:19;2267:81;;2313:24;;;;;;;;1711:25:485;;;1684:18;;2313:24:141;;;;;;;2267:81;2381:47;1232:25:293;;;2458:10:141;1277:4:293;1270:20;1338:4;1325:18;;;2483:266:141;2503:14;;;2483:266;;;2545:11;2559:3;;2563:1;2559:6;;;;;;;:::i;:::-;;;;;;;2545:20;;2583:13;2599:3;;2603:1;2607;2603:5;2599:10;;;;;;;:::i;:::-;;;;;;;2583:26;;2632:40;2636:23;2661:3;2666:5;2632:40;;;;;;;2636:25:485;;;2692:2;2677:18;;2670:34;;;;2735:2;2720:18;;2713:34;2624:2;2609:18;;2389:364;2632:40:141;;;;;;;;2690:6;:31;;;;;;;;;;;:36;;;;;;;;;;:44;2524:1;2519:6;2483:266;;;;2357:402;2043:722;;;:::o;14:332:485:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:485:o;543:719::-;674:6;682;690;743:2;731:9;722:7;718:23;714:32;711:52;;;759:1;756;749:12;711:52;795:9;782:23;772:33;;856:2;845:9;841:18;828:32;879:18;920:2;912:6;909:14;906:34;;;936:1;933;926:12;906:34;974:6;963:9;959:22;949:32;;1019:7;1012:4;1008:2;1004:13;1000:27;990:55;;1041:1;1038;1031:12;990:55;1081:2;1068:16;1107:2;1099:6;1096:14;1093:34;;;1123:1;1120;1113:12;1093:34;1176:7;1171:2;1161:6;1158:1;1154:14;1150:2;1146:23;1142:32;1139:45;1136:65;;;1197:1;1194;1187:12;1136:65;1228:2;1224;1220:11;1210:21;;1250:6;1240:16;;;;;543:719;;;;;:::o;1267:293::-;1380:6;1388;1441:2;1429:9;1420:7;1416:23;1412:32;1409:52;;;1457:1;1454;1447:12;1409:52;-1:-1:-1;;1480:23:485;;;1550:2;1535:18;;;1522:32;;-1:-1:-1;1267:293:485:o;1747:266::-;1779:1;1805;1795:189;;1840:77;1837:1;1830:88;1941:4;1938:1;1931:15;1969:4;1966:1;1959:15;1795:189;-1:-1:-1;1998:9:485;;1747:266::o;2200:184::-;2252:77;2249:1;2242:88;2349:4;2346:1;2339:15;2373:4;2370:1;2363:15","linkReferences":{}},"methodIdentifiers":{"get(uint256,bytes32)":"295f36d7","set(uint256,bytes32[])":"04b19db4","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"OddSetLength\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"FullyQualifiedNamespace\",\"name\":\"namespace\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"Set\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"FullyQualifiedNamespace\",\"name\":\"namespace\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"StateNamespace\",\"name\":\"namespace\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"kvs\",\"type\":\"bytes32[]\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Set(uint256,bytes32,bytes32)\":{\"params\":{\"key\":\"The key that the store is setting.\",\"namespace\":\"The fully qualified namespace that the store is setting.\",\"value\":\"The value that the store is setting.\"}}},\"kind\":\"dev\",\"methods\":{\"get(uint256,bytes32)\":{\"params\":{\"key\":\"The key to get the value for within the namespace.\",\"namespace\":\"The fully qualified namespace to get a single value for.\"},\"returns\":{\"_0\":\"The value OR ZERO IF NOT SET.\"}},\"set(uint256,bytes32[])\":{\"params\":{\"kvs\":\"The list of changes to apply to the store's internal state.\",\"namespace\":\"The unqualified namespace for the set that MUST be fully qualified by the `IInterpreterStoreV3` to prevent key collisions between callers. The fully qualified namespace forms a compound key with the keys for each value to set.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"RainterpreterStore\",\"version\":1},\"userdoc\":{\"errors\":{\"OddSetLength(uint256)\":[{\"notice\":\"Thrown when a `set` call is made with an odd number of arguments.\"}]},\"events\":{\"Set(uint256,bytes32,bytes32)\":{\"notice\":\"MUST be emitted by the store on `set` to its internal storage.\"}},\"kind\":\"user\",\"methods\":{\"get(uint256,bytes32)\":{\"notice\":\"Given a fully qualified namespace and key, return the associated value. Ostensibly the interpreter can use this to implement opcodes that read previously set values. The interpreter MUST apply the same qualification logic as the store that it uses to guarantee consistent round tripping of data and prevent malicious behaviours. Technically also allows onchain reads of any set value from any contract, not just interpreters, but in this case readers MUST be aware and handle inconsistencies between get and set while the state changes are still in memory in the calling context and haven't yet been persisted to the store. `IInterpreterStoreV3` uses the same fallback behaviour for unset keys as Solidity. Specifically, any UNSET VALUES SILENTLY FALLBACK TO `0`.\"},\"set(uint256,bytes32[])\":{\"notice\":\"Mutates the interpreter store in bulk. The bulk values are provided in the form of a `bytes32[]` which can be treated e.g. as pairwise keys and values to be stored in a Solidity mapping. The `IInterpreterStoreV3` defines the meaning of the `bytes32[]` for its own storage logic.\"}},\"notice\":\"Simplest possible `IInterpreterStoreV2` that could work. Takes key/value pairings from the input array and stores each in an internal mapping. `StateNamespace` is fully qualified only by `msg.sender` on set and doesn't attempt to do any deduping etc. if the same key appears twice it will be set twice.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/rain.interpreter/src/concrete/RainterpreterStore.sol\":\"RainterpreterStore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":9000},\"remappings\":[\":axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/\",\":bytecode/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/caller/\",\":codegen/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/codegen/\",\":constants/=lib/rain.interpreter/src/lib/constants/\",\":deprecated/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/\",\":ds-test/=lib/sushixswap-v2/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/rain.interpreter/lib/rain.string/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":mut/=lib/rain.interpreter/lib/rain.string/src/lib/mut/\",\":ns/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/rain.interpreter/lib/rain.string/lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":rain.datacontract/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.datacontract/src/\",\":rain.interpreter.interface/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/\",\":rain.interpreter/=lib/rain.interpreter/src/\",\":rain.intorastring/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.intorastring/src/\",\":rain.lib.hash/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.interpreter/lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.lib.typecast/src/\",\":rain.math.binary/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.binary/src/\",\":rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/src/\",\":rain.math.float/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/rain.math.float/src/\",\":rain.math.saturating/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.interpreter/lib/rain.metadata/src/\",\":rain.orderbook.interface/=lib/rain.orderbook.interface/src/\",\":rain.sol.codegen/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.sol.codegen/src/\",\":rain.solmem/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/rain.solmem/src/\",\":rain.string/=lib/rain.interpreter/lib/rain.string/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":sushixswap-v2/=lib/sushixswap-v2/\"]},\"sources\":{\"lib/rain.interpreter/src/concrete/RainterpreterStore.sol\":{\"keccak256\":\"0x910b21e6a4da2a8c007a168454a5b99cf6ea41134388ad87eae6f1cdeee2419c\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://bd01694143e58766e6e2f3ededf802547868e386253e0831adc0ade8e0d01a5e\",\"dweb:/ipfs/QmPXdjEgWozVWzyeMRkfQUUui2zovZs2ptyWvPz3saXGPH\"]},\"lib/rain.interpreter/src/generated/RainterpreterStore.pointers.sol\":{\"keccak256\":\"0x1d376de9d7747223bd77dd7786d3f8d4e3a391a4d7f53d31ce620cf51b66e49a\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://cddcd3edf184cf8678cf7915c35c47d643e41abf3ab9b361c935993096a6387f\",\"dweb:/ipfs/QmXSeeEUEEkZR6i51cHk9JCuf7e9wYd6s85kfjAGZCCPNV\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/IInterpreterStoreV2.sol\":{\"keccak256\":\"0x89b7dfa624962983c42da404fc8653daa29e793a60f11a2d9c8a9cf34caaf71a\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://10dcc56124d4a054ad13227e6098b7ceda11bbeccd8bb38d1e57da542285f72d\",\"dweb:/ipfs/QmUSgcm3Hpifk4GyjGMssJfo2Pea9dMm9sP4AzyzGfVA5c\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/IInterpreterV3.sol\":{\"keccak256\":\"0xf7515e68c4ad0218beafff4f59e21bbaf6c1268499515e4b9c28326440c574e1\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://dc3ddb0928de02c43930be791cf3b9c4ab1f2aba2d8acc768f5c746b2e69fd20\",\"dweb:/ipfs/QmRyACpHRo4TQpmpuioQ43oMMaRTSiEt8MMuYzCiwZCGXL\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterStoreV1.sol\":{\"keccak256\":\"0x7d2bc86fefbe372fc64381b320244fe9dbda1816867f3040c5bb3951869fe6a7\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://90c371494080129d5acd2bc52d092fc5cfe559147f7fc855ed01e62a7837f21e\",\"dweb:/ipfs/QmcNtPDuTxic8zqRFXf1ba6FJKmQXguxiDUY4E7wjyVwU5\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterV1.sol\":{\"keccak256\":\"0xe0b94c771a7b6aa05388b4db6e238e36a4653cbfdbd3e54bbcaa7a97fc9491f4\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://59887a7f2ef60669906c5e70831ac0c9a7345313b04efb306235280f85e1db73\",\"dweb:/ipfs/QmP6Ny9m3sPCP65UmgGGpucSMgVAoDv6qURqyxUE95VU5Q\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterV2.sol\":{\"keccak256\":\"0xa785ce2ac17059933b74aa3c8bd51321694ba8ddf27f2767ef99ea002faae1c6\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://130555df49552cf6865c4e82d6e67dd115151de2cd2161fb138849992d6a7a82\",\"dweb:/ipfs/QmRvrAGrkk3zgiG9Rox7m9wwzJL6B8ZcQAQvJpYKbvXvTS\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/unstable/IInterpreterStoreV3.sol\":{\"keccak256\":\"0xbfa8a7c8920c8aeeb821544d5dfcaae533fa4ddf5939f7c68fcc1df048e24756\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://7f46c0fde6d5adb57e0459a5864103c33191452b0656316bd4687ab32aa8c77d\",\"dweb:/ipfs/QmdCcxQAkK3RvDDuZpdZo4tr6oUf6PDhptfjr2dDTjsd4U\"]},\"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0xd621d3e5f8b404309ad5d841a3658248e979c1bd59876be3afa7aa0595b4c0e6\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://801fa302f49f3734dd5cc6221dd25f73591ac8feae47351c18e30a98a4ae0ce1\",\"dweb:/ipfs/QmbwXbTSMZ4u6ZsyfseBx79PeHNAWocNHXpgnaPVmLZM38\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"type":"error","name":"OddSetLength"},{"inputs":[{"internalType":"FullyQualifiedNamespace","name":"namespace","type":"uint256","indexed":false},{"internalType":"bytes32","name":"key","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"value","type":"bytes32","indexed":false}],"type":"event","name":"Set","anonymous":false},{"inputs":[{"internalType":"FullyQualifiedNamespace","name":"namespace","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"stateMutability":"view","type":"function","name":"get","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"StateNamespace","name":"namespace","type":"uint256"},{"internalType":"bytes32[]","name":"kvs","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"set"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"get(uint256,bytes32)":{"params":{"key":"The key to get the value for within the namespace.","namespace":"The fully qualified namespace to get a single value for."},"returns":{"_0":"The value OR ZERO IF NOT SET."}},"set(uint256,bytes32[])":{"params":{"kvs":"The list of changes to apply to the store's internal state.","namespace":"The unqualified namespace for the set that MUST be fully qualified by the `IInterpreterStoreV3` to prevent key collisions between callers. The fully qualified namespace forms a compound key with the keys for each value to set."}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{"get(uint256,bytes32)":{"notice":"Given a fully qualified namespace and key, return the associated value. Ostensibly the interpreter can use this to implement opcodes that read previously set values. The interpreter MUST apply the same qualification logic as the store that it uses to guarantee consistent round tripping of data and prevent malicious behaviours. Technically also allows onchain reads of any set value from any contract, not just interpreters, but in this case readers MUST be aware and handle inconsistencies between get and set while the state changes are still in memory in the calling context and haven't yet been persisted to the store. `IInterpreterStoreV3` uses the same fallback behaviour for unset keys as Solidity. Specifically, any UNSET VALUES SILENTLY FALLBACK TO `0`."},"set(uint256,bytes32[])":{"notice":"Mutates the interpreter store in bulk. The bulk values are provided in the form of a `bytes32[]` which can be treated e.g. as pairwise keys and values to be stored in a Solidity mapping. The `IInterpreterStoreV3` defines the meaning of the `bytes32[]` for its own storage logic."}},"version":1}},"settings":{"remappings":["axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/","bytecode/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/bytecode/","caller/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/caller/","codegen/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/codegen/","constants/=lib/rain.interpreter/src/lib/constants/","deprecated/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/","ds-test/=lib/sushixswap-v2/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/rain.interpreter/lib/rain.string/lib/openzeppelin-contracts/lib/erc4626-tests/","eval/=lib/rain.interpreter/src/lib/eval/","extern/=lib/rain.interpreter/src/lib/extern/","forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/","forge-std/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/forge-std/src/","integrity/=lib/rain.interpreter/src/lib/integrity/","mut/=lib/rain.interpreter/lib/rain.string/src/lib/mut/","ns/=lib/rain.interpreter/lib/rain.interpreter.interface/src/lib/ns/","op/=lib/rain.interpreter/src/lib/op/","openzeppelin-contracts/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/openzeppelin-contracts/","openzeppelin/=lib/rain.interpreter/lib/rain.string/lib/openzeppelin-contracts/contracts/","parse/=lib/rain.interpreter/src/lib/parse/","rain.datacontract/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.datacontract/src/","rain.interpreter.interface/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/","rain.interpreter/=lib/rain.interpreter/src/","rain.intorastring/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.intorastring/src/","rain.lib.hash/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.lib.hash/src/","rain.lib.memkv/=lib/rain.interpreter/lib/rain.lib.memkv/src/","rain.lib.typecast/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.lib.typecast/src/","rain.math.binary/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.binary/src/","rain.math.fixedpoint/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/src/","rain.math.float/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/rain.math.float/src/","rain.math.saturating/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.math.float/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/","rain.metadata/=lib/rain.interpreter/lib/rain.metadata/src/","rain.orderbook.interface/=lib/rain.orderbook.interface/src/","rain.sol.codegen/=lib/rain.interpreter/lib/rain.interpreter.interface/lib/rain.sol.codegen/src/","rain.solmem/=lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/rain.solmem/src/","rain.string/=lib/rain.interpreter/lib/rain.string/src/","sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/","state/=lib/rain.interpreter/src/lib/state/","sushixswap-v2/=lib/sushixswap-v2/"],"optimizer":{"enabled":true,"runs":9000},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/rain.interpreter/src/concrete/RainterpreterStore.sol":"RainterpreterStore"},"evmVersion":"paris","libraries":{}},"sources":{"lib/rain.interpreter/src/concrete/RainterpreterStore.sol":{"keccak256":"0x910b21e6a4da2a8c007a168454a5b99cf6ea41134388ad87eae6f1cdeee2419c","urls":["bzz-raw://bd01694143e58766e6e2f3ededf802547868e386253e0831adc0ade8e0d01a5e","dweb:/ipfs/QmPXdjEgWozVWzyeMRkfQUUui2zovZs2ptyWvPz3saXGPH"],"license":"CAL"},"lib/rain.interpreter/src/generated/RainterpreterStore.pointers.sol":{"keccak256":"0x1d376de9d7747223bd77dd7786d3f8d4e3a391a4d7f53d31ce620cf51b66e49a","urls":["bzz-raw://cddcd3edf184cf8678cf7915c35c47d643e41abf3ab9b361c935993096a6387f","dweb:/ipfs/QmXSeeEUEEkZR6i51cHk9JCuf7e9wYd6s85kfjAGZCCPNV"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b","urls":["bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d","dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"],"license":"MIT"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1","urls":["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f","dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"],"license":"MIT"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/IInterpreterStoreV2.sol":{"keccak256":"0x89b7dfa624962983c42da404fc8653daa29e793a60f11a2d9c8a9cf34caaf71a","urls":["bzz-raw://10dcc56124d4a054ad13227e6098b7ceda11bbeccd8bb38d1e57da542285f72d","dweb:/ipfs/QmUSgcm3Hpifk4GyjGMssJfo2Pea9dMm9sP4AzyzGfVA5c"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/IInterpreterV3.sol":{"keccak256":"0xf7515e68c4ad0218beafff4f59e21bbaf6c1268499515e4b9c28326440c574e1","urls":["bzz-raw://dc3ddb0928de02c43930be791cf3b9c4ab1f2aba2d8acc768f5c746b2e69fd20","dweb:/ipfs/QmRyACpHRo4TQpmpuioQ43oMMaRTSiEt8MMuYzCiwZCGXL"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterStoreV1.sol":{"keccak256":"0x7d2bc86fefbe372fc64381b320244fe9dbda1816867f3040c5bb3951869fe6a7","urls":["bzz-raw://90c371494080129d5acd2bc52d092fc5cfe559147f7fc855ed01e62a7837f21e","dweb:/ipfs/QmcNtPDuTxic8zqRFXf1ba6FJKmQXguxiDUY4E7wjyVwU5"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterV1.sol":{"keccak256":"0xe0b94c771a7b6aa05388b4db6e238e36a4653cbfdbd3e54bbcaa7a97fc9491f4","urls":["bzz-raw://59887a7f2ef60669906c5e70831ac0c9a7345313b04efb306235280f85e1db73","dweb:/ipfs/QmP6Ny9m3sPCP65UmgGGpucSMgVAoDv6qURqyxUE95VU5Q"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterV2.sol":{"keccak256":"0xa785ce2ac17059933b74aa3c8bd51321694ba8ddf27f2767ef99ea002faae1c6","urls":["bzz-raw://130555df49552cf6865c4e82d6e67dd115151de2cd2161fb138849992d6a7a82","dweb:/ipfs/QmRvrAGrkk3zgiG9Rox7m9wwzJL6B8ZcQAQvJpYKbvXvTS"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/interface/unstable/IInterpreterStoreV3.sol":{"keccak256":"0xbfa8a7c8920c8aeeb821544d5dfcaae533fa4ddf5939f7c68fcc1df048e24756","urls":["bzz-raw://7f46c0fde6d5adb57e0459a5864103c33191452b0656316bd4687ab32aa8c77d","dweb:/ipfs/QmdCcxQAkK3RvDDuZpdZo4tr6oUf6PDhptfjr2dDTjsd4U"],"license":"LicenseRef-DCL-1.0"},"lib/rain.orderbook.interface/lib/rain.interpreter.interface/src/lib/ns/LibNamespace.sol":{"keccak256":"0xd621d3e5f8b404309ad5d841a3658248e979c1bd59876be3afa7aa0595b4c0e6","urls":["bzz-raw://801fa302f49f3734dd5cc6221dd25f73591ac8feae47351c18e30a98a4ae0ce1","dweb:/ipfs/QmbwXbTSMZ4u6ZsyfseBx79PeHNAWocNHXpgnaPVmLZM38"],"license":"LicenseRef-DCL-1.0"}},"version":1},"id":141}